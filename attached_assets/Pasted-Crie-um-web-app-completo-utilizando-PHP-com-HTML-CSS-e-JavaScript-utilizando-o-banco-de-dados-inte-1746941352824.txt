Crie um web app completo utilizando PHP com HTML, CSS e JavaScript, utilizando o banco de dados integrado da Replit (MySQL ou SQLite) para a empresa fict√≠cia SAMAPE, especializada em assist√™ncia t√©cnica e manuten√ß√£o de maquin√°rio pesado.

O projeto deve ser totalmente funcional, seguro e com versionamento conectado ao GitHub.

üîß Stack de Tecnologias Obrigat√≥rias
Backend: PHP 8+

Frontend: HTML5, CSS3, JavaScript

CSS Framework: Bootstrap 5 (ou Tailwind CSS)

Banco de dados: Banco nativo da Replit (MySQL ou SQLite)

ORM (opcional): PDO para acesso seguro ao banco

Login com hash de senha seguro (bcrypt ou password_hash)

Controle de pap√©is de usu√°rio

GitHub conectado (Commit & Push manual ou autom√°tico)

üîê Seguran√ßa e Autentica√ß√£o
Implementar login com autentica√ß√£o baseada em papel de usu√°rio:

Administrador

Gerente

Funcion√°rio

Armazenar senhas com password_hash() e verificar com password_verify()

Proteger contra:

SQL Injection (via PDO com prepared statements)

CSRF (via tokens em formul√°rios)

XSS (com htmlspecialchars nas sa√≠das)

Sess√µes seguras com tempo de expira√ß√£o

Toda rota protegida por verifica√ß√£o de login e papel

Sistema de log de atividades dos usu√°rios (login, logout, cria√ß√£o/edi√ß√£o de dados)

üßæ Funcionalidades principais do sistema SAMAPE
1. P√°gina de Login Inicial
Autentica√ß√£o obrigat√≥ria

Redirecionamento seguro ap√≥s login

Sess√£o com timeout configur√°vel

2. Dashboard
Exibe cards/tabelas com:

Quantidade de OS abertas/em andamento/fechadas

Total faturado no m√™s

Log de atividades recentes

Pend√™ncias ou alertas

3. Gest√£o de Ordens de Servi√ßo (OS)
Criar, editar, listar, fechar

Relacionar a cliente e funcion√°rios

Gera√ß√£o de dados da NF-e ao fechar a OS

Filtros por status, cliente, data, respons√°vel

4. Cadastro de Clientes e Maquin√°rio
Campos para nome, CNPJ/CPF, telefone, email, endere√ßo

Cada cliente pode ter m√∫ltiplos maquin√°rios:

tipo, marca, modelo, n√∫mero de s√©rie, ano, √∫ltima manuten√ß√£o

5. Gest√£o de Funcion√°rios
Nome, cargo, email, status (ativo/inativo)

Controle de acesso baseado no papel

6. Financeiro
Entradas (valores faturados das OS)

Sa√≠das (gastos operacionais)

Relat√≥rios mensais

Exporta√ß√£o de dados em CSV

üß± Banco de Dados (MySQL ou SQLite no Replit)
Crie as seguintes tabelas:

usuarios (id, nome, email, senha_hash, papel)

logs (id, usuario_id, acao, datahora)

clientes (id, nome, cnpj, telefone, email, endereco)

maquinarios (id, cliente_id, tipo, marca, modelo, numero_serie, ano, ultima_manutencao)

ordens_servico (id, cliente_id, descricao, status, data_abertura, data_fechamento, valor_total)

funcionarios (id, nome, cargo, email, ativo)

os_funcionarios (ordem_id, funcionario_id) ‚Äî relacionamento muitos-para-muitos

financeiro (id, tipo, valor, descricao, data)

A conex√£o deve ser feita usando PDO com DSN apropriado para o banco da Replit:

php
Copiar
Editar
new PDO("sqlite:/home/runner/SEU_PROJETO/data.db"); // para SQLite
// ou
new PDO("mysql:host=127.0.0.1;dbname=replit", "root", ""); // para MySQL da Replit
As credenciais e caminhos devem estar protegidos usando vari√°veis de ambiente no Replit (Secrets).

üõ†Ô∏è Integra√ß√£o com GitHub (no Replit)
Conectar a conta do GitHub ao Replit.

Criar reposit√≥rio com o nome samape-webapp.

Toda altera√ß√£o deve ser:

Comitada com mensagem descritiva.

Enviada (push) para o GitHub via Replit Git.

üìÑ Extras (opcional se quiser caprichar mais)
Tela "Sobre a Empresa" com hist√≥ria da Samape

Exporta√ß√£o de dados (clientes, OS, financeiro) em CSV ou PDF

Tela de impress√£o da OS

Gera√ß√£o autom√°tica de PDF da OS ou da NF-e

Dark Mode no frontend